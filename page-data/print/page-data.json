{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","result":{"data":{"deck":{"id":"2d75aa6b-4142-559f-ada9-a22719687175","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar theme = oceanicNext;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Image = makeShortcode(\"Image\");\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"IaC Challenger\")), mdx(\"h2\", null, \"IaC Challenger\"), mdx(\"hr\", null), mdx(\"h2\", null, \"IaC Challenger | Terraform\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/luismayta\"\n  }, \"@luismayta | DevOps Engineer\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"No Tenemos Tiempo\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(Image, {\n    src: processThinking,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  })), mdx(\"hr\", null), mdx(\"h2\", null, \"Agenda\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What is Infrastructure as Code?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Goals\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tools\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Initial Challenges\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scaling Challenges\")), mdx(\"hr\", null), mdx(\"h4\", null, \"What Is Infrastructure as Code?\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"p\", null, \"Managed and provisioned through code.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Goals\"), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-markdown\"\n  }, \"- **Unify** the view of resources\\n- **Support** the modern data center (IaaS, PaaS, SaaS)\\n- Expose a Way for individuals and teams to **safely and predictably change** infrastructure\\n- Provide a workflow that is **technology agnostic**\\n- Manage anything with an **API**\\n\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Tools\"), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://aws.amazon.com/cloudformation\"\n  }, \"Aws Cloudformation\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Example\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"\\nEC2Instance:\\n  Type: AWS::EC2::Instance\\n  Properties:\\n      ImageId: !FindInMap [ AWSRegionArch2AMI, !Ref 'AWS::Region' , !FindInMap [ AWSInstanceType2Arch, !Ref InstanceType, Arch ] ]\\n      KeyName: !Ref KeyName\\n      InstanceType: !Ref InstanceType\\n      SecurityGroups:\\n      - !Ref Ec2SecurityGroup\\n      BlockDeviceMappings:\\n      -\\n          DeviceName: /dev/sda1\\n          Ebs:\\n          VolumeSize: 50\\n      -\\n          DeviceName: /dev/sdm\\n          Ebs:\\n          VolumeSize: 100\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 title=\\\"Especify type of resource\\\"\",\n    \"title\": \"\\\"Especify\",\n    \"type\": true,\n    \"of\": true,\n    \"resource\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"5:7 title=\\\"Configuration ec2 instance\\\"\",\n    \"5:7\": true,\n    \"title\": \"\\\"Configuration\",\n    \"ec2\": true,\n    \"instance\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"8:9 title=\\\"Added security Group\\\"\",\n    \"8:9\": true,\n    \"title\": \"\\\"Added\",\n    \"security\": true,\n    \"Group\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"10:18 title=\\\"Configuration Block Device\\\"\",\n    \"10:18\": true,\n    \"title\": \"\\\"Configuration\",\n    \"Block\": true,\n    \"Device\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.pulumi.com\"\n  }, \"Pulumi\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Example\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"\\npackage main\\n\\nimport (\\n    \\\"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2\\\"\\n    \\\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\\\"\\n)\\n\\nfunc main() {\\n    pulumi.Run(func(ctx *pulumi.Context) error {\\n        // Create a new security group for port 80.\\n        group, err := ec2.NewSecurityGroup(ctx, \\\"web-secgrp\\\", &ec2.SecurityGroupArgs{\\n            Ingress: ec2.SecurityGroupIngressArray{\\n                ec2.SecurityGroupIngressArgs{\\n                    Protocol:   pulumi.String(\\\"tcp\\\"),\\n                    FromPort:   pulumi.Int(80),\\n                    ToPort:     pulumi.Int(80),\\n                    CidrBlocks: pulumi.StringArray{pulumi.String(\\\"0.0.0.0/0\\\")},\\n                },\\n            },\\n        })\\n        if err != nil {\\n            return err\\n        }\\n\\n        // Get the ID for the 20.04 Ubuntu Linux AMI.\\n        mostRecent := true\\n        ami, err := ec2.LookupAmi(ctx, &ec2.LookupAmiArgs{\\n            Filters: []ec2.GetAmiFilter{\\n                {\\n                    Name:   \\\"name\\\",\\n                    Values: []string{\\\"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*\\\"},\\n                },\\n            },\\n            Owners:     []string{\\\"099720109477\\\"},\\n            MostRecent: &mostRecent,\\n        })\\n        if err != nil {\\n            return err\\n        }\\n\\n        // Create a simple instance using the startup script for the instance.\\n        srv, err := ec2.NewInstance(ctx, \\\"instance\\\", &ec2.InstanceArgs{\\n            Tags:                pulumi.StringMap{\\\"Name\\\": pulumi.String(\\\"instance-server\\\")},\\n            InstanceType:        pulumi.String(\\\"t2.micro\\\"), // t2.micro is available in the AWS free tier.\\n            VpcSecurityGroupIds: pulumi.StringArray{group.ID()},\\n            Ami:                 pulumi.String(ami.Id),\\n            UserData: pulumi.String(`#!/bin/bash\\necho \\\"Hello, World!\\\"\\n`),\\n        })\\n\\n        // Export the resulting server's IP address and DNS name.\\n        ctx.Export(\\\"publicIp\\\", srv.PublicIp)\\n        ctx.Export(\\\"publicHostName\\\", srv.PublicDns)\\n        return nil\\n    })\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"4:7 title=\\\"Import libraries\\\"\",\n    \"4:7\": true,\n    \"title\": \"\\\"Import\",\n    \"libraries\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"12:21 title=\\\"Make new security Group\\\"\",\n    \"12:21\": true,\n    \"title\": \"\\\"Make\",\n    \"new\": true,\n    \"security\": true,\n    \"Group\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"26:37 title=\\\"Get Id AMI Ubuntu\\\"\",\n    \"26:37\": true,\n    \"title\": \"\\\"Get\",\n    \"Id\": true,\n    \"AMI\": true,\n    \"Ubuntu\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"42:51 title=\\\"Make new instance\\\"\",\n    \"42:51\": true,\n    \"title\": \"\\\"Make\",\n    \"new\": true,\n    \"instance\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.terraform.io\"\n  }, \"Terraform\"))), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"p\", null, \"Write, Plan, and Create Infrastructure as Code.\")), mdx(\"hr\", null), mdx(\"h3\", null, \"Example\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"\\nresource \\\"aws_instance\\\" \\\"this\\\" {\\n  ami               = \\\"ami of linux\\\"\\n  instance_type     = \\\"t2.micro\\\"\\n  key_name          = \\\"aws key name\\\"\\n  source_dest_check = true\\n\\n  root_block_device {\\n    encrypted             = true\\n    volume_type           = \\\"gp2\\\"\\n    volume_size           = \\\"16\\\"\\n    delete_on_termination = true\\n  }\\n  ...\\n\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"3:5 title=\\\"Configuration of instance\\\"\",\n    \"3:5\": true,\n    \"title\": \"\\\"Configuration\",\n    \"of\": true,\n    \"instance\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"8:13 title=\\\"Configuration root block device\\\"\",\n    \"8:13\": true,\n    \"title\": \"\\\"Configuration\",\n    \"root\": true,\n    \"block\": true,\n    \"device\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Components Terraform\"), mdx(Image, {\n    src: componentsTerraform,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h3\", null, \"How Terraform Works\"), mdx(Image, {\n    src: howTerraformWorks,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h3\", null, \"Terragrunt\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"p\", null, \"Terragrunt is a thin wrapper that provides extra tools for keeping your configurations DRY\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"terraform {\\n  extra_arguments \\\"retry_lock\\\" {\\n    commands = get_terraform_commands_that_need_locking()\\n    arguments = [\\n      \\\"-lock-timeout=40m\\\"\\n    ]\\n  }\\n  extra_arguments \\\"parallelism\\\" {\\n    commands = get_terraform_commands_that_need_parallelism()\\n    arguments = [\\n      \\\"-parallelism=15\\\"\\n    ]\\n  }\\n}\\n\\nremote_state {\\n  backend = \\\"s3\\\"\\n  config = {\\n    bucket  = \\\"name of bucket\\\"\\n    encrypt = true\\n    # Configure Terragrunt to automatically store tfstate files in an S3 bucket\\n    key            = \\\"${path_relative_to_include()}/terraform.tfstate\\\"\\n    region         = \\\"region of aws\\\"\\n    dynamodb_table = \\\"table of dynamodb\\\"\\n\\n    s3_bucket_tags = {\\n      owner = \\\"owner tag\\\"\\n      name  = \\\"Terraform state storage\\\"\\n    }\\n\\n    # dynamodb_table_tags is an attribute, so an equals sign is REQUIRED\\n    dynamodb_table_tags = {\\n      owner = \\\"owner tag\\\"\\n      name  = \\\"Terraform lock table\\\"\\n    }\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"1:13 title=\\\"Implement extra args to terraform.\\\"\",\n    \"1:13\": true,\n    \"title\": \"\\\"Implement\",\n    \"extra\": true,\n    \"args\": true,\n    \"to\": true,\n    \"terraform.\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"16:17 title=\\\"Remote State\\\"\",\n    \"16:17\": true,\n    \"title\": \"\\\"Remote\",\n    \"State\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"18:23 title=\\\"Configuration bucket s3\\\"\",\n    \"18:23\": true,\n    \"title\": \"\\\"Configuration\",\n    \"bucket\": true,\n    \"s3\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"26:29  title=\\\"Configuration Tags S3\\\"\",\n    \"26:29\": true,\n    \"\": true,\n    \"title\": \"\\\"Configuration\",\n    \"Tags\": true,\n    \"S3\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"24\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"24 title=\\\"Configuration DynamoDB Table\\\"\",\n    \"title\": \"\\\"Configuration\",\n    \"DynamoDB\": true,\n    \"Table\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"32:35  title=\\\"Configuration Tags DynamoDB\\\"\",\n    \"32:35\": true,\n    \"\": true,\n    \"title\": \"\\\"Configuration\",\n    \"Tags\": true,\n    \"DynamoDB\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"How Terragrunt Works\"), mdx(Image, {\n    src: howTerragruntWorks,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h2\", null, \"Initial Challenges\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Need to learn to Code\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"p\", null, \"HCL is the HashiCorp configuration language.\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"resource \\\"aws_instance\\\" \\\"this\\\" {\\n  ami               = \\\"ami of linux\\\"\\n  instance_type     = \\\"t2.micro\\\"\\n  key_name          = \\\"aws key name\\\"\\n\\n  vpc_security_group_ids = [\\n    aws_security_group.this.id\\n  ]\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"2:4  title=\\\"Configuration resource\\\"\",\n    \"2:4\": true,\n    \"\": true,\n    \"title\": \"\\\"Configuration\",\n    \"resource\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Can't automate a resource\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://registry.terraform.io/browse/providers\"\n  }, \"Providers\")))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"terraform {\\n  required_version = \\\">= 0.13\\\"\\n\\n  required_providers {\\n    gitlab = {\\n      source  = \\\"gitlabhq/gitlab\\\"\\n      version = \\\">=3.5.0\\\"\\n    }\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"4:9 title=\\\"Implement providers\\\"\",\n    \"4:9\": true,\n    \"title\": \"\\\"Implement\",\n    \"providers\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://registry.terraform.io/browse/providers\"\n  }, \"Providers\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Can't track changes\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"p\", null, \"Implement Repository Git.\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"2021-09-29 23:44 -0500 luis mayta o [feature/DOPS-351] {origin/feature/DOPS-351} feat: DOPS-351 change version terraform\\n2021-09-29 14:23 -0500 luis mayta o build: DOPS-351 generate files readme\\n2021-09-29 14:22 -0500 luis mayta o fix: DOPS-351 delete name other company\\n2021-09-29 14:21 -0500 luis mayta o sample: DOPS-351 implement basic sample\\n2021-09-29 14:19 -0500 luis mayta o fix: DOPS-351 execute test using terraform test\\n2021-09-29 14:17 -0500 luis mayta o fix: DOPS-351 link broke load module project\\n2021-09-29 14:16 -0500 luis mayta o fix: DOPS-351 generator task for go\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"1\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"1 title=\\\"Tracking commits git\\\"\",\n    \"title\": \"\\\"Tracking\",\n    \"commits\": true,\n    \"git\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Don't know change impact\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"terraform plan\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"terraform apply\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"terraform destroy\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Terraform Apply\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"  # module.rancher.null_resource.provision_core will be created\\n  + resource \\\"null_resource\\\" \\\"provision_core\\\" {\\n      + id       = (known after apply)\\n      + triggers = (known after apply)\\n    }\\n\\n  # module.rancher.null_resource.provision_docker[0] will be created\\n  + resource \\\"null_resource\\\" \\\"provision_docker\\\" {\\n      + id       = (known after apply)\\n      + triggers = (known after apply)\\n    }\\n\\nPlan: 9 to add, 0 to change, 0 to destroy.\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"1:5 title=\\\"Resource to create\\\"\",\n    \"1:5\": true,\n    \"title\": \"\\\"Resource\",\n    \"to\": true,\n    \"create\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"13\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"13 title=\\\"Information change Impact\\\"\",\n    \"title\": \"\\\"Information\",\n    \"change\": true,\n    \"Impact\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Need to revert a change\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"p\", null, \"git checkout tag\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Scaling Challenges\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Multiple environments for infrastructure\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"terraform workspace new stage\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"terragrunt apply --terragrunt-working-dir {{.REGION}}/{{.STAGE}} --terragrunt-source-update\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"provision/terraform/us-east-1\\n\\u251C\\u2500\\u2500 common.yml\\n\\u251C\\u2500\\u2500 core\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 data.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 deploy.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 github.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 groups.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 main.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 terragrunt.hcl\\n\\u251C\\u2500\\u2500 staging\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 data.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 deploy.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 github.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 groups.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 main.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 terragrunt.hcl\\n\\u251C\\u2500\\u2500 production\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 data.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 deploy.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 github.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 groups.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 main.tf\\n\\u2502\\xA0\\xA0 \\u251C\\u2500\\u2500 terragrunt.hcl\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"3:9 title=\\\"Stage core\\\"\",\n    \"3:9\": true,\n    \"title\": \"\\\"Stage\",\n    \"core\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"10:16 title=\\\"Stage staging\\\"\",\n    \"10:16\": true,\n    \"title\": \"\\\"Stage\",\n    \"staging\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"17:23 title=\\\"Stage production\\\"\",\n    \"17:23\": true,\n    \"title\": \"\\\"Stage\",\n    \"production\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Duplicate code\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"module \\\"project_readme\\\" {\\n  source = \\\"git::https://gitlab.infosisglobal.com/devops-toolkit/terraform-gitlab-project.git?ref=develop\\\"\\n  ...\\n}\\n\\nmodule \\\"project_readme\\\" {\\n  source = \\\"infosisarg/project/gitlab\\\"\\n  version = \\\"develop\\\"\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"1:2 title=\\\"Import module by git\\\"\",\n    \"1:2\": true,\n    \"title\": \"\\\"Import\",\n    \"module\": true,\n    \"by\": true,\n    \"git\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"6:8 title=\\\"Import module by namespace\\\"\",\n    \"6:8\": true,\n    \"title\": \"\\\"Import\",\n    \"module\": true,\n    \"by\": true,\n    \"namespace\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://registry.terraform.io/browse/modules\"\n  }, \"Modules\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Managing secrets\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"resource \\\"aws_db_instance\\\" \\\"example\\\" {\\n  engine               = \\\"mysql\\\"\\n  engine_version       = \\\"5.7\\\"\\n  instance_class       = \\\"db.t2.micro\\\"\\n  name                 = \\\"example\\\"\\n  # DO NOT DO THIS!!!\\n  username = \\\"admin\\\"\\n  password = \\\"password\\\"\\n  # DO NOT DO THIS!!!\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"6:9 title=\\\"do NOT hard-code your database credentials\\\"\",\n    \"6:9\": true,\n    \"title\": \"\\\"do\",\n    \"NOT\": true,\n    \"hard-code\": true,\n    \"your\": true,\n    \"database\": true,\n    \"credentials\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://aws.amazon.com/kms/KMS\"\n  }, \"AWS KMS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mozilla/sops\"\n  }, \"SOPS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"...\")), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mozilla/sops\"\n  }, \"SOPS\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"keys:\\n  - &infrastructure 8589224DCEDE55F0CDD9FA6C4339A0A5AACCBE16\\ncreation_rules:\\n  - path_regex: .*/secrets/.*\\\\.(enc|yml|yaml)$\\n    key_groups:\\n      - pgp:\\n          - *infrastructure\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"1:2 title=\\\"Key pgp public\\\"\",\n    \"1:2\": true,\n    \"title\": \"\\\"Key\",\n    \"pgp\": true,\n    \"public\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"3:7 title=\\\"Implement rules for secrets files\\\"\",\n    \"3:7\": true,\n    \"title\": \"\\\"Implement\",\n    \"rules\": true,\n    \"for\": true,\n    \"secrets\": true,\n    \"files\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"db:\\n    username: ENC[AES256_GCM,data:dZtfXGj1+kCcItw=,iv:...,tag:...type:str]\\n    password: ENC[AES256_GCM,data:...,iv:...,tag:...,type:str]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2 title=\\\"Values for username encrypted\\\"\",\n    \"title\": \"\\\"Values\",\n    \"for\": true,\n    \"username\": true,\n    \"encrypted\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 title=\\\"Values for password encrypted\\\"\",\n    \"title\": \"\\\"Values\",\n    \"for\": true,\n    \"password\": true,\n    \"encrypted\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"locals {\\n  secrets = yamldecode(sops_decrypt_file((\\\"secrets.yml\\\")))\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2 title=\\\"import values encrypted\\\"\",\n    \"title\": \"\\\"import\",\n    \"values\": true,\n    \"encrypted\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"inputs = {\\n  username = local.secrets.db.username\\n  password = local.secrets.db.password\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2 title=\\\"pass username inputs to your Terraform\\\"\",\n    \"title\": \"\\\"pass\",\n    \"username\": true,\n    \"inputs\": true,\n    \"to\": true,\n    \"your\": true,\n    \"Terraform\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 title=\\\"pass password as inputs to your Terraform\\\"\",\n    \"title\": \"\\\"pass\",\n    \"password\": true,\n    \"as\": true,\n    \"inputs\": true,\n    \"to\": true,\n    \"your\": true,\n    \"Terraform\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"variable \\\"username\\\" {\\n  description = \\\"The username for the DB master user\\\"\\n  type        = string\\n  sensitive = true\\n}\\n\\nvariable \\\"password\\\" {\\n  description = \\\"The password for the DB master user\\\"\\n  type        = string\\n  sensitive = true\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"4\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"4 title=\\\"Enabled sensitive\\\"\",\n    \"title\": \"\\\"Enabled\",\n    \"sensitive\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"resource \\\"aws_db_instance\\\" \\\"example\\\" {\\n  engine               = \\\"mysql\\\"\\n  engine_version       = \\\"5.7\\\"\\n  instance_class       = \\\"db.t2.micro\\\"\\n  name                 = \\\"example\\\"\\n  # Set the secrets from variables\\n  username = var.username\\n  password = var.password\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"7:8 title=\\\"Implement values database\\\"\",\n    \"7:8\": true,\n    \"title\": \"\\\"Implement\",\n    \"values\": true,\n    \"database\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Infrastructure Testing\"), mdx(\"hr\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://terratest.gruntwork.io\"\n  }, \"Terratest\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }, \"package test\\n\\nimport (\\n    \\\"testing\\\"\\n\\n    \\\"github.com/gruntwork-io/terratest/modules/terraform\\\"\\n    \\\"github.com/stretchr/testify/assert\\\"\\n)\\n\\nfunc TestBasicSuccess(t *testing.T) {\\n    t.Parallel()\\n\\n    name := \\\"name server\\\"\\n\\n    terraformOptions := &terraform.Options{\\n        // The path to where your Terraform code is located\\n        TerraformDir: \\\"instance-basic\\\",\\n        Upgrade:      true,\\n        Vars: map[string]interface{}{\\n            \\\"name\\\":        name,\\n        },\\n    }\\n\\n    // At the end of the test, run `terraform destroy` to clean up any resources that were created\\n    defer terraform.Destroy(t, terraformOptions)\\n\\n    // This will run `terraform init` and `terraform apply` and fail the test if there are any errors\\n    terraform.InitAndApply(t, terraformOptions)\\n    outputInstance := terraform.Output(t, terraformOptions, \\\"instance\\\")\\n    assert.NotEmpty(t, outputInstance, outputInstance)\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"6:7 title=\\\"Import Libraries\\\"\",\n    \"6:7\": true,\n    \"title\": \"\\\"Import\",\n    \"Libraries\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"15:22 title=\\\"Set values for module\\\"\",\n    \"15:22\": true,\n    \"title\": \"\\\"Set\",\n    \"values\": true,\n    \"for\": true,\n    \"module\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"28\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"28 title=\\\"Execute terraform\\\"\",\n    \"title\": \"\\\"Execute\",\n    \"terraform\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-diff\",\n    \"metastring\": \"29:30 title=\\\"Validate response\\\"\",\n    \"29:30\": true,\n    \"title\": \"\\\"Validate\",\n    \"response\\\"\": true\n  }, \"\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"25\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"25 title=\\\"Destroy if an error occurs\\\"\",\n    \"title\": \"\\\"Destroy\",\n    \"if\": true,\n    \"an\": true,\n    \"error\": true,\n    \"occurs\\\"\": true\n  }, \"\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Thank you\"), mdx(\"br\", null), mdx(\"h4\", null, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"https://github.com/luismayta\"\n  }, \"@luismayta\")), mdx(\"br\", null), mdx(\"h4\", null, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"</Code>\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"2d75aa6b-4142-559f-ada9-a22719687175","slug":"/slides-iac-challenger","title":"IaC Challenger"}},"staticQueryHashes":[]}